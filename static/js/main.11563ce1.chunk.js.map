{"version":3,"sources":["logo.png","logo-navbar.svg","api/apiClient.tsx","store/alert/actions.tsx","store/document/actions.tsx","api/documents.tsx","SmartComponents/DocumentCreate/DocumentCreate.tsx","Utilities/Utils.tsx","SmartComponents/DocumentCreate/index.tsx","PresentationalComponents/PageDocuments/PageCreateStandardDocument/PageCreateStandardDocument.tsx","PresentationalComponents/PageDocuments/PageCreateVoidedDocument/PageCreateVoidedDocument.tsx","PresentationalComponents/PageDocuments/PageDocuments.tsx","Routes.tsx","SmartComponents/DeleteDialog/DeleteDialog.tsx","store/deleteDialog/actions.ts","store/deleteDialog/reducer.ts","store/deleteDialog/selectors.ts","SmartComponents/DeleteDialog/index.tsx","PresentationalComponents/SidebarNav/SidebarNav.tsx","App.tsx","serviceWorker.ts","store/rootReducer.tsx","api/apiInit.tsx","index.tsx","store/index.tsx"],"names":["module","exports","BackendAPIClient","path","body","method","config","axios","request","Object","assign","url","data","this","addNotification","require","alertFetchEndpoint","err","errorDescription","response","error","dispatch","variant","title","message","description","dismissable","createEnrichDocumentRequest","createAction","createEnrichDocumentSuccess","createEnrichDocumentFailure","createDocumentRequest","createDocumentSuccess","createDocumentFailure","requestEnrichDocument","documentType","document","ApiClient","post","replace","enrichDocument","then","res","catch","requestCreateDocument","createDocument","DocumentCreate","props","input","fileName","headers","contentDisposition","filename","indexOf","matches","exec","extractFilenameFromContentDispositionHeaderValue","setState","responseXMLOutput","xml","responseEnrichedOutput","handleFormStandardDocumentSubmit","form","requestInput","tipoComprobante","handleFormVoidedDocumentSubmit","state","formType","onSubmit","Grid","lg","gutter","GridItem","span","SplitItem","Card","CardHeader","CardBody","requestObj","responseEnrichedObj","responseXML","React","Component","mapStateToProps","mapDispatchToProps","documentActions","withRouter","connect","PageCreateStandardDocument","handleOnTabSelect","event","eventKey","history","push","Fragment","activeKey","onTabSelect","PageCreateVoidedDocument","PageDocuments","match","component","exact","AppRoutes","render","welcomeMessage","buttonAdministrarServidor","to","className","PageForbidden403","PageNotFound404","PageServiceUnavailable503","DeleteDialogBase","type","name","onDelete","onCancel","isOpen","isProcessing","isError","Modal","isSmall","onClose","actions","Button","key","isDisabled","ButtonVariant","danger","onClick","link","openModal","closeModal","processing","defaultState","deleteDialogState","deleteDialogSelectors","deleteDialogActions","SidebarNav","Nav","id","aria-label","theme","NavGroup","NavItem","activeClassName","frontendComponentsNotifications","App","NotificationsPortal","version","process","REACT_APP_VERSION","productName","swaggerApiURL","githubIssuesURL","documentationURL","githubSourceCodeURL","sidebarNav","brandImageSrc","navBrandImageSrc","Boolean","window","location","hostname","rootReducer","combineReducers","notifications","action","getType","payload","defaults","baseURL","ReactDOM","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,yuCC8C5BC,E,qGA1CXC,GAWkB,IAVlBC,EAUiB,uDAVL,KACZC,EASiB,uDAFD,MAChBC,EACiB,uDADR,GAET,OAAOC,IAAMC,QACXC,OAAOC,OACL,GACA,CACEC,IAAKR,EACLE,SACAO,KAAMR,GAERE,M,2BAKgBH,EAAcC,GAA0C,IAA/BE,EAA8B,uDAArB,GACtD,OAAOO,KAAKL,QAAWL,EAAMC,EAAM,OAAQE,K,0BAGxBH,EAAcC,GAA0C,IAA/BE,EAA8B,uDAArB,GACrD,OAAOO,KAAKL,QAAWL,EAAMC,EAAM,MAAOE,K,0BAGvBH,GACnB,OAAOU,KAAKL,QAAWL,K,6BAGJA,GAA4B,IAAdG,EAAa,uDAAJ,GAC1C,OAAOO,KAAKL,QAAQL,EAAM,KAAM,SAAUG,O,KCrCxCQ,EADkCC,EAAQ,IACQD,gBAQ3CE,EAAqB,SAACC,GACjC,IAAIC,EAAmB,GAQvB,OAPID,EAAIE,UAAYF,EAAIE,SAASP,OACE,kBAAtBK,EAAIE,SAASP,KACtBM,EAAmBD,EAAIE,SAASP,KACvBK,EAAIE,SAASP,KAAKQ,QAC3BF,EAAmBD,EAAIE,SAASP,KAAKQ,QAGlC,SAACC,GACNA,EACEP,EAAgB,CACdQ,QAAS,SACTC,MAAON,EAAIO,QACXC,YAAaP,EACbQ,aAAa,OCrBRC,EAA8BC,uBACzC,0BADyCA,GAG9BC,EAA8BD,uBACzC,0BADyCA,GAG9BE,EAA8BF,uBACzC,0BADyCA,GAI9BG,EAAwBH,uBAAa,0BAAbA,GACxBI,EAAwBJ,uBAAa,0BAAbA,GAGxBK,EAAwBL,uBAAa,0BAAbA,GAIxBM,EAAwB,SACnCC,EACAC,GAEA,OAAO,SAACf,GAEN,OADAA,EAASM,KCvBiB,SAC5BQ,EACAC,GAEA,OAAOC,EAAUC,KAPU,mCAQJC,QAAQ,iBAAkBJ,GAC/CC,GDkBOI,CAAeL,EAAcC,GACjCK,MAAK,SAACC,GAEL,OADArB,EAASQ,EAA4Ba,EAAI9B,OAClC8B,EAAI9B,QAEZ+B,OAAM,SAAC1B,GACNI,EAASS,EAA4Bb,IACrCD,EAAmBC,EAAnBD,CAAwBK,QAKnBuB,EAAwB,SACnCT,EACAC,GAEA,OAAO,SAACf,GAEN,OADAA,EAASU,KC/BiB,SAC5BI,EACAC,GAEA,OAAOC,EAAUC,KAhBU,mCAiBJC,QAAQ,iBAAkBJ,GAC/CC,GD0BOS,CAAeV,EAAcC,GACjCK,MAAK,SAACC,GAEL,OADArB,EAASW,EAAsBU,EAAI9B,OAC5B8B,KAERC,OAAM,SAAC1B,GACNI,EAASY,EAAsBhB,IAC/BD,EAAmBC,EAAnBD,CAAwBK,Q,0DEqGjByB,E,kDA9Gb,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IAQRF,eAAiB,SAACV,EAA4Ba,IAG5CJ,EAFkC,EAAKG,MAA/BH,uBAEcT,EAAca,GAAOP,MAAK,SAACtB,GAC/C,GAAIA,EAAU,CACZ,IAAM8B,EC7DkD,SAACC,GAC/D,IAAMC,EAAqBD,EAAQ,uBAE/BE,EAAW,GACf,GAAID,IAAoE,IAA9CA,EAAmBE,QAAQ,cAAsB,CACzE,IACMC,EADgB,yCACQC,KAAKJ,GACpB,MAAXG,GAAmBA,EAAQ,KAC7BF,EAAWE,EAAQ,GAAGf,QAAQ,QAAS,KAI3C,OAAOa,EDiDgBI,CACfrC,EAAS+B,SAEX,EAAKO,SAAS,CACZC,kBAAmB,CACjBC,IAAKxC,EAASP,KACdwC,SAAUH,UApBM,EA2B1BT,eAAiB,SAACL,EAA4Ba,IAG5Cd,EAFkC,EAAKa,MAA/Bb,uBAEcC,EAAca,GAAOP,MAAK,SAACtB,GAC/C,EAAKsC,SAAS,CAAEG,uBAAwBzC,QA/BlB,EAmC1B0C,iCAAmC,SACjCC,EACAd,GAEA,EAAKS,SAAS,CAAEM,aAAcf,IAAS,WACrC,IAAIb,EAA6B2B,EAAKE,gBACtC,EAAKnB,eAAeV,EAAca,GAClC,EAAKR,eAAeL,EAAca,OA1CZ,EA8C1BiB,+BAAiC,SAC/BH,EACAd,GAEA,EAAKS,SAAS,CAAEM,aAAcf,IAAS,WAErC,EAAKH,eAD4B,kBACCG,GAClC,EAAKR,eAF4B,kBAECQ,OAnDpC,EAAKkB,MAAQ,CACXH,aAAc,KACdH,uBAAwB,KACxBF,kBAAmB,MALG,E,qDAyDhB,IAQJI,EAPIK,EAAatD,KAAKkC,MAAlBoB,SADD,EAMHtD,KAAKqD,MAHPH,EAHK,EAGLA,aACAH,EAJK,EAILA,uBACAF,EALK,EAKLA,kBAIF,OAAQS,GACN,IAAK,oBACHL,EACE,kBAAC,IAAD,CACEM,SAAUvD,KAAKgD,mCAGnB,MACF,IAAK,kBACHC,EACE,kBAAC,IAAD,CAAoBM,SAAUvD,KAAKoD,iCAErC,MACF,QACEH,EAAO,qDAGX,OACE,kBAACO,EAAA,EAAD,CAAMC,GAAI,EAAGC,OAAO,MAClB,kBAACC,EAAA,EAAD,CAAUC,KAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,sCACA,kBAACC,EAAA,EAAD,KAAWf,MAIjB,kBAACU,EAAA,EAAD,CAAUC,KAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEI,WAAYf,EACZgB,oBAAqBnB,EACrBoB,YAAa,CACXrB,IAAKD,EAAoBA,EAAkBC,IAAM,GACjDP,SAAUM,EAAoBA,EAAkBN,SAAW,a,GArG9C6B,IAAMC,WExC7BC,EAAwC,SAAAjB,GAAK,MAAK,IAElDkB,EAAqB,CACzBlD,sBAAuBmD,EAAgBnD,sBACvCU,sBAAuByC,EAAgBzC,uBAG1B0C,cACbC,kBAAQJ,EAAiBC,EAAzBG,CAA6CzC,ICDlC0C,EAAb,4MACEC,kBAAoB,SAClBC,EACAC,GACU,IACFC,EAAY,EAAK7C,MAAjB6C,QAEFjF,EAAG,oBACQ,IAAbgF,EACFC,EAAQC,KAAKlF,EAAM,sBACG,IAAbgF,GACTC,EAAQC,KAAKlF,EAAM,qBAXzB,uDAgBI,OACE,kBAAC,IAAMmF,SAAP,KACE,kBAAC,IAAD,CAAcC,UAAW,EAAGC,YAAanF,KAAK4E,mBAC5C,kBAAC,EAAD,CAAgBtB,SAAS,4BAnBnC,GAAgDc,IAAMC,WCAzCe,EAAb,4MACER,kBAAoB,SAClBC,EACAC,GACU,IACFC,EAAY,EAAK7C,MAAjB6C,QAEFjF,EAAG,oBACQ,IAAbgF,EACFC,EAAQC,KAAKlF,EAAM,sBACG,IAAbgF,GACTC,EAAQC,KAAKlF,EAAM,qBAXzB,uDAgBI,OACE,kBAAC,IAAMmF,SAAP,KACE,kBAAC,IAAD,CAAcC,UAAW,EAAGC,YAAanF,KAAK4E,mBAC5C,kBAAC,EAAD,CAAgBtB,SAAS,0BAnBnC,GAA8Cc,IAAMC,WCDvCgB,EAAiC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC/C,OACE,kBAAC,IAAML,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE3F,KAAI,UAAKgG,EAAMhG,MACfiG,UAAWZ,EACXa,OAAO,IAET,kBAAC,IAAD,CACElG,KAAI,UAAKgG,EAAMhG,KAAX,6BACJiG,UAAWZ,EACXa,OAAO,IAET,kBAAC,IAAD,CACElG,KAAI,UAAKgG,EAAMhG,KAAX,2BACJiG,UAAWH,EACXI,OAAO,OClBJC,EAAY,WACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnG,KAAK,QACLoG,OAAQ,kBACN,kBAAC,IAAD,CACEC,eAAe,2BACfC,0BACE,kBAAC,IAAD,CAAMC,GAAG,aAAaC,UAAU,4BAAhC,oBAQR,kBAAC,IAAD,CAAOxG,KAAK,aAAaiG,UAAWF,IAEpC,kBAAC,IAAD,CAAO/F,KAAK,YAAYiG,UAAWQ,MACnC,kBAAC,IAAD,CAAOzG,KAAK,YAAYiG,UAAWS,MACnC,kBAAC,IAAD,CAAO1G,KAAK,YAAYiG,UAAWU,MACnC,kBAAC,IAAD,CAAO3G,KAAK,IAAIoG,OAAQ,kBAAM,kBAAC,IAAD,CAAUG,GAAI,e,kCCiCnCK,G,8KAhDI,IAAD,EASVlG,KAAKkC,MAPPiE,EAFY,EAEZA,KACAC,EAHY,EAGZA,KACAC,EAJY,EAIZA,SACAC,EALY,EAKZA,SACAC,EANY,EAMZA,OACAC,EAPY,EAOZA,aACAC,EARY,EAQZA,QAGF,OACE,kBAACC,EAAA,EAAD,CACEC,SAAS,EACTjG,MAAK,iBAAY0F,EAAZ,KACLQ,QAAS,WACPN,KAEFC,OAAQA,EACRM,QAAS,CACP,kBAACC,EAAA,EAAD,CACEC,IAAI,UACJC,WAAYR,EACZ/F,QAASwG,IAAcC,OACvBC,QAASd,GAJX,oBAMaF,IAEb,kBAACW,EAAA,EAAD,CACEC,IAAI,SACJC,WAAYR,EACZ/F,QAASwG,IAAcG,KACvBD,QAAS,WACPb,MALJ,YAYDG,EAAO,sDAC2CN,EAD3C,wDAEqCA,EAFrC,0EAEqGA,EAFrG,0B,GAzCe/B,IAAMC,YCPxBgD,EAAYtG,uBAAa,qBAAbA,GACZuG,EAAavG,uBAAa,sBAAbA,GACbwG,EAAaxG,uBAAa,2BAAbA,GACbR,EAAQQ,uBAAa,sBAAbA,G,QCCRyG,GAAkC,CAC7CjB,QAAQ,EACRC,cAAc,EACdC,SAAS,EACTL,KAAM,GACND,KAAM,GACNE,SAAU,cCjBCoB,GAAoB,SAACpE,GAAD,OAAsBA,EAAK,cAE/CmD,GAAe,SAACnD,GAAD,OAAsBoE,GAAkBpE,GAAOmD,cAE9DD,GAAS,SAAClD,GAAD,OAAsBoE,GAAkBpE,GAAOkD,QAExDE,GAAU,SAACpD,GAAD,OAAsBoE,GAAkBpE,GAAOoD,SAEzDL,GAAO,SAAC/C,GAAD,OAAsBoE,GAAkBpE,GAAO+C,MAEtDD,GAAO,SAAC9C,GAAD,OAAsBoE,GAAkBpE,GAAO8C,MAEtDE,GAAW,SAAChD,GAAD,OAAsBoE,GAAkBpE,GAAOgD,UCPxD3B,sBACS,SAAArB,GAAK,MAAK,CAC9BgD,SAAUqB,EAAsBrB,SAAShD,GACzCkD,OAAQmB,EAAsBnB,OAAOlD,GACrCmD,aAAckB,EAAsBlB,aAAanD,GACjDoD,QAASiB,EAAsBjB,QAAQpD,GACvC+C,KAAMsB,EAAsBtB,KAAK/C,GACjC8C,KAAMuB,EAAsBvB,KAAK9C,MAEnC,CACEiD,SAAUqB,EAAoBL,YAVnB5C,CAYbwB,G,wCCXW0B,GAAb,uKAEI,OACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,qBAAqBC,aAAW,MAAMC,MAAM,QAClD,kBAACC,GAAA,EAAD,CAAUvH,MAAM,IACd,kBAACwH,GAAA,EAAD,KACE,kBAAC,IAAD,CAASrC,GAAG,QAAQsC,gBAAgB,gBAClC,kBAAC,KAAD,MADF,cAMJ,kBAACF,GAAA,EAAD,CAAUvH,MAAM,6BACd,kBAACwH,GAAA,EAAD,CAASnB,IAAI,aACX,kBAAC,IAAD,CAASlB,GAAE,aAAgBsC,gBAAgB,gBAA3C,uCAdZ,GAAgC/D,IAAMC,W,0CCShC+D,I,OAAkClI,EAAQ,KA6BjCmI,GA3BO,WACpB,IAAMC,EACJF,GAAgCE,oBAElC,OACE,kBAAC,IAAMrD,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsD,QAASC,oHAAYC,mBAAqB,GAC1CC,YAAY,cACZC,cAAc,mEACdC,gBAAgB,wDAChBC,iBAAiB,kDACjBC,oBAAoB,iDACpBC,WAAY,kBAAC,GAAD,MACZC,cAAeA,KACfC,iBAAkBA,MAElB,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAACX,EAAD,UC5BUY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/D,MACvB,2D,+DCbA8C,GAAkClI,EAAQ,IAInCoJ,GAAcC,2BAAgB,cACzCC,cAAepB,GAAgCoB,eNPzB,gBAwBD,WAGE,IAFvBnG,EAEsB,uDAFKmE,GAC3BiC,EACsB,uCACtB,OAAQA,EAAOtD,MACb,KAAKuD,kBAAQrC,GACX,OAAO,eACFhE,EADL,GAEKoG,EAAOE,QAFZ,CAGEpD,QAAQ,IAEZ,KAAKmD,kBAAQnC,GACX,OAAO,eACFlE,EADL,CAEEmD,cAAc,IAElB,KAAKkD,kBAAQpC,GACX,OAAOE,GACT,KAAKkC,kBAAQnJ,GACX,OAAO,eACF8C,EADL,CAEEoD,SAAS,IAEb,QACE,OAAOpD,OO9CX3D,IAAMkK,SAASC,QAAf,UAH0B,QCS5BC,IAASpE,OACP,kBAAC,WAAD,CAAUqE,MCLHC,uBACLV,GACAW,+BAAoBC,2BAAgBC,KAAQC,SDI5C,kBAAC,GAAD,OAEF7I,SAAS8I,eAAe,SH0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5I,MAAK,SAAA6I,GACjCA,EAAaC,kB","file":"static/js/main.11563ce1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9b4f3b1c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-navbar.f314a279.svg\";","import axios, { AxiosPromise } from \"axios\";\n\nclass BackendAPIClient {\n  public static request<T>(\n    path: string,\n    body: any = null,\n    method:\n      | \"get\"\n      | \"post\"\n      | \"put\"\n      | \"delete\"\n      | \"options\"\n      | \"patch\"\n      | undefined = \"get\",\n    config = {}\n  ): AxiosPromise<T> {\n    return axios.request<T>(\n      Object.assign(\n        {},\n        {\n          url: path,\n          method,\n          data: body\n        },\n        config\n      )\n    );\n  }\n\n  public static post<T>(path: string, body: any, config = {}): AxiosPromise<T> {\n    return this.request<T>(path, body, \"post\", config);\n  }\n\n  public static put<T>(path: string, body: any, config = {}): AxiosPromise<T> {\n    return this.request<T>(path, body, \"put\", config);\n  }\n\n  public static get<T>(path: string): AxiosPromise<T> {\n    return this.request<T>(path);\n  }\n\n  public static delete(path: string, config = {}) {\n    return this.request(path, null, \"delete\", config);\n  }\n}\n\nexport default BackendAPIClient;\n","import { Dispatch } from \"redux\";\nimport { AlertModel } from \"../../models/alert\";\nimport { AxiosError } from \"axios\";\n\nconst frontendComponentsNotifications = require(\"@redhat-cloud-services/frontend-components-notifications\");\nconst addNotification = frontendComponentsNotifications.addNotification;\n\nexport const alert = (alert: AlertModel) => {\n  return (dispatch: Dispatch) => {\n    dispatch(addNotification(alert));\n  };\n};\n\nexport const alertFetchEndpoint = (err: AxiosError) => {\n  let errorDescription = \"\";\n  if (err.response && err.response.data) {\n    if (typeof err.response.data === \"string\") {\n      errorDescription = err.response.data;\n    } else if (err.response.data.error) {\n      errorDescription = err.response.data.error;\n    }\n  }\n  return (dispatch: Dispatch) => {\n    dispatch(\n      addNotification({\n        variant: \"danger\",\n        title: err.message,\n        description: errorDescription,\n        dismissable: true\n      })\n    );\n  };\n};\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { enrichDocument, createDocument } from \"../../api/documents\";\nimport { alertFetchEndpoint } from \"../alert/actions\";\nimport { DocumentType } from \"../../models/xml-builder\";\n\nexport const createEnrichDocumentRequest = createAction(\n  \"document/enrich/request\"\n)();\nexport const createEnrichDocumentSuccess = createAction(\n  \"document/enrich/success\"\n)<any>();\nexport const createEnrichDocumentFailure = createAction(\n  \"document/enrich/failure\"\n)<AxiosError>();\n\nexport const createDocumentRequest = createAction(\"document/create/request\")();\nexport const createDocumentSuccess = createAction(\"document/create/success\")<\n  any\n>();\nexport const createDocumentFailure = createAction(\"document/create/failure\")<\n  AxiosError\n>();\n\nexport const requestEnrichDocument = (\n  documentType: DocumentType,\n  document: any\n) => {\n  return (dispatch: Dispatch) => {\n    dispatch(createEnrichDocumentRequest());\n    return enrichDocument(documentType, document)\n      .then((res: AxiosResponse<any>) => {\n        dispatch(createEnrichDocumentSuccess(res.data));\n        return res.data;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createEnrichDocumentFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n\nexport const requestCreateDocument = (\n  documentType: DocumentType,\n  document: any\n) => {\n  return (dispatch: Dispatch) => {\n    dispatch(createDocumentRequest());\n    return createDocument(documentType, document)\n      .then((res: AxiosResponse<any>) => {\n        dispatch(createDocumentSuccess(res.data));\n        return res;\n      })\n      .catch((err: AxiosError) => {\n        dispatch(createDocumentFailure(err));\n        alertFetchEndpoint(err)(dispatch);\n      });\n  };\n};\n","import { AxiosPromise } from \"axios\";\nimport ApiClient from \"./apiClient\";\nimport { DocumentType } from \"../models/xml-builder\";\n\nconst ENRICH_DOCUMENTS_URL = \"/documents/{documentType}/enrich\";\nconst CREATE_DOCUMENTS_URL = \"/documents/{documentType}/create\";\n\nexport const enrichDocument = (\n  documentType: DocumentType,\n  document: any\n): AxiosPromise<any> => {\n  return ApiClient.post<any>(\n    ENRICH_DOCUMENTS_URL.replace(\"{documentType}\", documentType),\n    document\n  );\n};\n\nexport const createDocument = (\n  documentType: DocumentType,\n  document: any\n): AxiosPromise<any> => {\n  return ApiClient.post<any>(\n    CREATE_DOCUMENTS_URL.replace(\"{documentType}\", documentType),\n    document\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  SplitItem,\n  CardHeader\n} from \"@patternfly/react-core\";\nimport {\n  FormStandardDocument,\n  DocumentRequestResponseViewer,\n  StandardDocumentFormData,\n  FormVoidedDocument,\n  FormVoidedDocumentData\n} from \"@projectopenubl/xml-builder-react\";\nimport { DocumentType } from \"../../models/xml-builder\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport { extractFilenameFromContentDispositionHeaderValue } from \"../../Utilities/Utils\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {\n  requestEnrichDocument: (\n    documentType: DocumentType,\n    document: any\n  ) => Promise<any>;\n  requestCreateDocument: (\n    documentType: DocumentType,\n    document: any\n  ) => Promise<any>;\n}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {\n  formType: string;\n}\n\ninterface State {\n  requestInput: any;\n  responseEnrichedOutput: any;\n  responseXMLOutput: {\n    xml: any;\n    filename: string;\n  } | null;\n}\n\nclass DocumentCreate extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      requestInput: null,\n      responseEnrichedOutput: null,\n      responseXMLOutput: null\n    };\n  }\n\n  createDocument = (documentType: DocumentType, input: any) => {\n    const { requestCreateDocument } = this.props;\n\n    requestCreateDocument(documentType, input).then((response: any) => {\n      if (response) {\n        const fileName = extractFilenameFromContentDispositionHeaderValue(\n          response.headers\n        );\n        this.setState({\n          responseXMLOutput: {\n            xml: response.data,\n            filename: fileName\n          }\n        });\n      }\n    });\n  };\n\n  enrichDocument = (documentType: DocumentType, input: any) => {\n    const { requestEnrichDocument } = this.props;\n\n    requestEnrichDocument(documentType, input).then((response: any) => {\n      this.setState({ responseEnrichedOutput: response });\n    });\n  };\n\n  handleFormStandardDocumentSubmit = (\n    form: StandardDocumentFormData,\n    input: any\n  ) => {\n    this.setState({ requestInput: input }, () => {\n      let documentType: DocumentType = form.tipoComprobante as DocumentType;\n      this.createDocument(documentType, input);\n      this.enrichDocument(documentType, input);\n    });\n  };\n\n  handleFormVoidedDocumentSubmit = (\n    form: FormVoidedDocumentData,\n    input: any\n  ) => {\n    this.setState({ requestInput: input }, () => {\n      let documentType: DocumentType = \"voided-document\";\n      this.createDocument(documentType, input);\n      this.enrichDocument(documentType, input);\n    });\n  };\n\n  render() {\n    const { formType } = this.props;\n    const {\n      requestInput,\n      responseEnrichedOutput,\n      responseXMLOutput\n    } = this.state;\n\n    let form;\n    switch (formType) {\n      case \"standard-document\":\n        form = (\n          <FormStandardDocument\n            onSubmit={this.handleFormStandardDocumentSubmit}\n          />\n        );\n        break;\n      case \"voided-document\":\n        form = (\n          <FormVoidedDocument onSubmit={this.handleFormVoidedDocumentSubmit} />\n        );\n        break;\n      default:\n        form = <small>No valid form type</small>;\n    }\n\n    return (\n      <Grid lg={2} gutter=\"sm\">\n        <GridItem span={8}>\n          <SplitItem>\n            <Card>\n              <CardHeader>Datos del comprobante de pago</CardHeader>\n              <CardBody>{form}</CardBody>\n            </Card>\n          </SplitItem>\n        </GridItem>\n        <GridItem span={4}>\n          <SplitItem>\n            <DocumentRequestResponseViewer\n              requestObj={requestInput}\n              responseEnrichedObj={responseEnrichedOutput}\n              responseXML={{\n                xml: responseXMLOutput ? responseXMLOutput.xml : \"\",\n                filename: responseXMLOutput ? responseXMLOutput.filename : \"\"\n              }}\n            />\n          </SplitItem>\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default DocumentCreate;\n","export const extractFilenameFromContentDispositionHeaderValue = (headers: any) => {\n  const contentDisposition = headers[\"content-disposition\"];\n\n  let filename = \"\";\n  if (contentDisposition && contentDisposition.indexOf(\"attachment\") !== -1) {\n    const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n    const matches = filenameRegex.exec(contentDisposition);\n    if (matches != null && matches[1]) {\n      filename = matches[1].replace(/['\"]/g, \"\");\n    }\n  }\n\n  return filename;\n};\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { documentActions } from \"../../store/document\";\nimport { createMapStateToProps } from \"../../store/common\";\nimport DocumentCreate from \"./DocumentCreate\";\n\nconst mapStateToProps = createMapStateToProps(state => ({}));\n\nconst mapDispatchToProps = {\n  requestEnrichDocument: documentActions.requestEnrichDocument,\n  requestCreateDocument: documentActions.requestCreateDocument\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DocumentCreate)\n);\n","import React from \"react\";\nimport { TabsDocument } from \"@projectopenubl/xml-builder-react\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport DocumentCreate from \"../../../SmartComponents/DocumentCreate\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {}\n\nexport class PageCreateStandardDocument extends React.Component<Props, State> {\n  handleOnTabSelect = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string\n  ): void => {\n    const { history } = this.props;\n\n    const url = `/documents/create`;\n    if (eventKey === 0) {\n      history.push(url + \"/standard-document\");\n    } else if (eventKey === 1) {\n      history.push(url + \"/voided-document\");\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <TabsDocument activeKey={0} onTabSelect={this.handleOnTabSelect}>\n          <DocumentCreate formType=\"standard-document\" />\n        </TabsDocument>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { TabsDocument } from \"@projectopenubl/xml-builder-react\";\nimport { XmlBuilderRouterProps } from \"../../../models/routerProps\";\nimport DocumentCreate from \"../../../SmartComponents/DocumentCreate\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\ninterface State {}\n\nexport class PageCreateVoidedDocument extends React.Component<Props, State> {\n  handleOnTabSelect = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string\n  ): void => {\n    const { history } = this.props;\n\n    const url = `/documents/create`;\n    if (eventKey === 0) {\n      history.push(url + \"/standard-document\");\n    } else if (eventKey === 1) {\n      history.push(url + \"/voided-document\");\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <TabsDocument activeKey={1} onTabSelect={this.handleOnTabSelect}>\n          <DocumentCreate formType=\"voided-document\" />\n        </TabsDocument>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { XmlBuilderRouterProps } from \"../../models/routerProps\";\nimport { PageCreateStandardDocument } from \"./PageCreateStandardDocument\";\nimport { PageCreateVoidedDocument } from \"./PageCreateVoidedDocument\";\n\ninterface StateToProps {}\n\ninterface DispatchToProps {}\n\ninterface Props extends StateToProps, DispatchToProps, XmlBuilderRouterProps {}\n\nexport const PageDocuments: React.FC<Props> = ({ match }) => {\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route\n          path={`${match.path}`}\n          component={PageCreateStandardDocument}\n          exact={true}\n        />\n        <Route\n          path={`${match.path}/create/standard-document`}\n          component={PageCreateStandardDocument}\n          exact={true}\n        />\n        <Route\n          path={`${match.path}/create/voided-document`}\n          component={PageCreateVoidedDocument}\n          exact={true}\n        />\n      </Switch>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport {\n  PageHome,\n  PageForbidden403,\n  PageNotFound404,\n  PageServiceUnavailable503\n} from \"@projectopenubl/xml-builder-react\";\n\nimport { PageDocuments } from \"./PresentationalComponents/PageDocuments\";\n\nexport const AppRoutes = () => {\n  return (\n    <Switch>\n      <Route\n        path=\"/home\"\n        render={() => (\n          <PageHome\n            welcomeMessage=\"Bienvenido a XML Builder\"\n            buttonAdministrarServidor={\n              <Link to=\"/documents\" className=\"pf-c-button pf-m-primary\">\n                Administrar\n              </Link>\n            }\n          />\n        )}\n      />\n\n      <Route path=\"/documents\" component={PageDocuments} />\n\n      <Route path=\"/error403\" component={PageForbidden403} />\n      <Route path=\"/error404\" component={PageNotFound404} />\n      <Route path=\"/error503\" component={PageServiceUnavailable503} />\n      <Route path=\"/\" render={() => <Redirect to={\"/home\"} />} />\n    </Switch>\n  );\n};\n","import { Button, Modal, ButtonVariant } from \"@patternfly/react-core\";\nimport React from \"react\";\nimport \"./DeleteDialog.scss\";\nimport { deleteDialogActions } from \"../../store/deleteDialog\";\n\ninterface Props {\n  onDelete: () => void;\n  onCancel: typeof deleteDialogActions.closeModal;\n  isOpen: boolean;\n  isProcessing: boolean;\n  isError: boolean;\n  name: string;\n  type: string;\n}\n\ninterface State {}\n\nclass DeleteDialogBase extends React.Component<Props, State> {\n  public render() {\n    const {\n      type,\n      name,\n      onDelete,\n      onCancel,\n      isOpen,\n      isProcessing,\n      isError\n    } = this.props;\n\n    return (\n      <Modal\n        isSmall={true}\n        title={`Delete ${name}?`}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={isOpen}\n        actions={[\n          <Button\n            key=\"confirm\"\n            isDisabled={isProcessing}\n            variant={ButtonVariant.danger}\n            onClick={onDelete}\n          >\n            Delete {`${type}`}\n          </Button>,\n          <Button\n            key=\"cancel\"\n            isDisabled={isProcessing}\n            variant={ButtonVariant.link}\n            onClick={() => {\n              onCancel();\n            }}\n          >\n            Cancel\n          </Button>\n        ]}\n      >\n        {isError\n          ? `Ops! There was a problem while deleting the ${type}.`\n          : `¿Estas seguro de querer eliminar este ${type}? Esta acción eliminará todos los datos asociados a esta ${type} permanentemente.`}\n      </Modal>\n    );\n  }\n}\n\nexport default DeleteDialogBase;\n","import { AxiosError } from 'axios';\nimport { createAction } from 'typesafe-actions';\n\ninterface Item {\n  name: string;\n  type: string;\n  onDelete: () => void;\n  onCancel: () => void;\n}\n\nexport const openModal = createAction('dialog/delete/open')<Item>();\nexport const closeModal = createAction('dialog/delete/close')<void>();\nexport const processing = createAction('dialog/delete/processing')<void>();\nexport const error = createAction('dialog/delete/error')<AxiosError>();\n","import { ActionType, getType } from 'typesafe-actions';\nimport { closeModal, error, openModal, processing } from './actions';\n\nexport const stateKey = 'deleteDialog';\n\nexport type DeleteDialogState = Readonly<{\n  isOpen: boolean;\n  isProcessing: boolean;\n  isError: boolean;\n  name: string;\n  type: string;\n  onDelete: () => void;\n}>;\n\nexport const defaultState: DeleteDialogState = {\n  isOpen: false,\n  isProcessing: false,\n  isError: false,\n  name: '',\n  type: '',\n  onDelete: () => { },\n};\n\nexport type DeleteDialogAction = ActionType<\n  typeof openModal | typeof closeModal | typeof processing | typeof error\n>;\n\nexport const reducer = (\n  state: DeleteDialogState = defaultState,\n  action: DeleteDialogAction\n): DeleteDialogState => {\n  switch (action.type) {\n    case getType(openModal):\n      return {\n        ...state,\n        ...action.payload,\n        isOpen: true,\n      };\n    case getType(processing):\n      return {\n        ...state,\n        isProcessing: true,\n      };\n    case getType(closeModal):\n      return defaultState;\n    case getType(error):\n      return {\n        ...state,\n        isError: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { RootState } from '../rootReducer';\nimport { stateKey } from './reducer';\n\nexport const deleteDialogState = (state: RootState) => state[stateKey];\n\nexport const isProcessing = (state: RootState) => deleteDialogState(state).isProcessing;\n\nexport const isOpen = (state: RootState) => deleteDialogState(state).isOpen;\n\nexport const isError = (state: RootState) => deleteDialogState(state).isError;\n\nexport const name = (state: RootState) => deleteDialogState(state).name;\n\nexport const type = (state: RootState) => deleteDialogState(state).type;\n\nexport const onDelete = (state: RootState) => deleteDialogState(state).onDelete;\n","import { connect } from \"react-redux\";\nimport DeleteDialogBase from \"./DeleteDialog\";\nimport {\n  deleteDialogSelectors,\n  deleteDialogActions\n} from \"../../store/deleteDialog\";\nimport { createMapStateToProps } from \"../../store/common\";\n\nexport default connect(\n  createMapStateToProps(state => ({\n    onDelete: deleteDialogSelectors.onDelete(state),\n    isOpen: deleteDialogSelectors.isOpen(state),\n    isProcessing: deleteDialogSelectors.isProcessing(state),\n    isError: deleteDialogSelectors.isError(state),\n    name: deleteDialogSelectors.name(state),\n    type: deleteDialogSelectors.type(state)\n  })),\n  {\n    onCancel: deleteDialogActions.closeModal\n  }\n)(DeleteDialogBase);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, NavItem, NavGroup } from \"@patternfly/react-core\";\nimport { HomeIcon } from \"@patternfly/react-icons\";\n\ninterface Props {}\n\ninterface State {}\n\nexport class SidebarNav extends React.Component<Props, State> {\n  render() {\n    return (\n      <Nav id=\"nav-primary-simple\" aria-label=\"Nav\" theme=\"dark\">\n        <NavGroup title=\"\">\n          <NavItem>\n            <NavLink to=\"/home\" activeClassName=\"pf-m-current\">\n              <HomeIcon />\n              &nbsp;Home\n            </NavLink>\n          </NavItem>\n        </NavGroup>\n        <NavGroup title=\"Consola administración\">\n          <NavItem key=\"documents\">\n            <NavLink to={`/documents`} activeClassName=\"pf-m-current\">\n              Comprobantes electrónicos\n            </NavLink>\n          </NavItem>\n        </NavGroup>\n      </Nav>\n    );\n  }\n}\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { AppRoutes } from \"./Routes\";\n\nimport \"./App.css\";\nimport \"./App.scss\";\n\nimport { LayoutBasicProject } from \"@projectopenubl/xml-builder-react\";\n\nimport DeleteMessageDialog from \"./SmartComponents/DeleteDialog\";\nimport { SidebarNav } from \"./PresentationalComponents/SidebarNav\";\n\nimport brandImageSrc from \"./logo.png\";\nimport navBrandImageSrc from \"./logo-navbar.svg\";\n\nimport \"@redhat-cloud-services/frontend-components-notifications/index.css\";\n\nimport \"@redhat-cloud-services/frontend-components-notifications/index.css\";\nconst frontendComponentsNotifications = require(\"@redhat-cloud-services/frontend-components-notifications\");\n\nconst App: React.FC = () => {\n  const NotificationsPortal =\n    frontendComponentsNotifications.NotificationsPortal;\n\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <LayoutBasicProject\n          version={process.env.REACT_APP_VERSION || \"\"}\n          productName=\"XML Builder\"\n          swaggerApiURL=\"https://app.swaggerhub.com/apis-docs/project-openubl/xml-builder\"\n          githubIssuesURL=\"https://github.com/project-openubl/xml-builder/issues\"\n          documentationURL=\"https://project-openubl.gitbook.io/xml-builder/\"\n          githubSourceCodeURL=\"https://github.com/project-openubl/xml-builder\"\n          sidebarNav={<SidebarNav />}\n          brandImageSrc={brandImageSrc}\n          navBrandImageSrc={navBrandImageSrc}\n        >\n          <AppRoutes />\n          <DeleteMessageDialog />\n          <NotificationsPortal />\n        </LayoutBasicProject>\n      </HashRouter>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { StateType } from \"typesafe-actions\";\n\nimport { deleteDialogStateKey, deleteDialogReducer } from \"./deleteDialog\";\n\nconst frontendComponentsNotifications = require(\"@redhat-cloud-services/frontend-components-notifications\");\n\nexport type RootState = StateType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  notifications: frontendComponentsNotifications.notifications,\n  [deleteDialogStateKey]: deleteDialogReducer\n});\n","import axios from \"axios\";\n\nexport const API_BASE_URL = \"/api\";\n\nexport const initApi = () => {\n  axios.defaults.baseURL = `${API_BASE_URL}`;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport { initApi } from \"./api/apiInit\";\n\ninitApi();\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootReducer } from \"./rootReducer\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(logger, thunk))\n  );\n}\n"],"sourceRoot":""}